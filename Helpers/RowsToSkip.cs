namespace MediGuru.DataExtractionTool.Helpers;

public static class RowsToSkip
{
    public static readonly IList<int> MedicalLaboratoryTechnologists = new List<int>()
    {
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
    };

    public static readonly IList<int> PathologyRowsToSkip = new List<int>
    {
        633
    };

    public static IList<int> GetChiropractorsRowsToSkip()
    {
        return [..Enumerable.Range(1, 10), 13, 14, 18, 21, 28];
    }

    public static IList<int> GetBiokineticsRowsToSkip()
    {
        return [..Enumerable.Range(1, 10), 18, 30];
    }

    public static IList<int> GetClinicalTechnologyRowsToSkip()
    {
        return [..Enumerable.Range(1, 8), 32, 33, 49, 54, 60, 77, 78, 102, 106, 108, 113, 121, 122, 127, 130, 134];
    }

    public static IList<int> GetContractedAnaesthesiologistRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 107), 127, 131, 135, 144, 145, 146, 148, 159, 153, 154, 155, 157, 160, 163,
            165, ..Enumerable.Range(167, 8), 185, 186, 190, ..Enumerable.Range(195, 38), 240, 297, 310, 394, 418, 424,
            438, 439, 445, 446, 447, ..Enumerable.Range(448, 10), 459, 460, 514, 526, 527, 536, 540, 552, 555, 560,
            561, 577, 580, 586, 590, 601, 623, 630, 637, 638, 645, 646, 672, 677, 678, 721, 738, 760, 766, 775, 777,
            787,
            803, 810, 811, 821, 826, 837, 845, 846, 855, 859, 873, 874, 887, 890, 911, 912, 913, 914, 921, 922, 923,
            951,
            952, 981, 982, 1053, 1054, 1055, 1075, 1113, 1114, 1115, 1116, 1123, 1133, 1134, 1154, 1155, 1171, 1172,
            1173,
            1174, 1175, 1176, 1177, 1179, 1181, 1185, 1189, 1190, 1191, 1203, 1219, 1220, 1236, 1243, 1244, 1247, 1250,
            1253,
            1272, 1273, 1274, 1283, 1286, 1304, 1317, 1332, 1335, 1351, 1356, 1370, 1391, 1392, 1393, 1394, 1411, 1413,
            1414,
            1419, 1421, 1435, 1449, 1451, 1455, 1456, 1461, 1483, 1484, 1485, 1486, 1487, 1507, 1523, 1526, 1548, 1590,
            1612, 1617, 1651, 1654, 1665, 1698, 1714, 1729, 1748, 1763, 1775, 1776, 1777, 1778, 1818, 1849, 1926, 1971,
            1972, 2003, 2004, 2042, 2063, 2062, 2095, 2158, 2159, 2187, 2226, 2236, 2252, 2263, 2288, 2289, 2290, 2291,
            2305, 2309, 2310, 2311, 2315, 2316, 2327, 2339, 2392, 2407, 2417, 2431, 2438, 2452, 2471, 2496, 2515, 2528,
            2555, 2557, 2594, 2627, 2628, 2629, 2639, 2643, 2648, 2649, 2650, 2653, 2661, 2662, 2665, 2666, 2682, 2686,
            2695, 2696, 2697, 2698, 2699, 2701, 2705, 2706, 2713, 2717, 2720, 2723, 2728, 2729, 2730, 2731, 2742, 2769,
            2774, 2785, 2792, 2795, 2801, 2821, 2830, 2863, 2873, 2800, 2892, 2897, 2903, 2907, 2910, 2911,
            2920, 2921, 2922, 2923, 2924, 2925, 2936, 2947, 2975, 2976, 2979, 2984, 2985, 3005,
            3021, 3031, 3037, 3042, 3044, 3046, 3048, 3051, 3054, 3058, 3084, 3085, 3086, 3087, //3087 last one
            3088, 3089, 3131, 3143, 3162, 3176, 3185, 3197, 3200, 3208, 3213, 3215, 3221, 3236,
            3239, 3240, 3241, 3309, 3326, 3327, 3381, 3382, 3391, 3392, 3393, 3475, 3476, 3477,
            3478, 3479, 3480, 3559, 3560, 3561, 3568, 3575, 3582, 3589, 3592, 3599, 3600, 3607,
            3618, 3623, 3624, 3628, 3632, 3636, 3638, 3639, 3640, 3641, 3748, 3767, 3817, 3880,
            3881, 3882, 4020, 4103, 4118, 4149, 4159, 4160, 4172, 4183, 4271, 4273, 4274, 4275,
            4276, 4277, 4278, 4279, 4287, 4303, 4304, 4305, 4314,
        ];
    }

    public static IList<int> GetContractedDentalSpecialistsRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 70), 76, 85, 89, 94, 95, 104, 108, 111, 112, 146, 160, 161, 162, 168, 169, 172, 173,
            177, 187,
            188, 189, 190, 196, 197, 207, 211, 212, 213, 214, 220, 221, 226, 227, 228, 230, 232, 234, 236, 238, 240,
            241, 242, 243,
            250, 251, 258, 269, 273, 279, 280, 295, 309, 310, 311, 312, 315, 318, 319, 320, 326, 327, 332, 333, 341,
            345, 348, 355,
            366, 367, 368, 369, 374, 392, 399, 404, 405, 406, 418, 432, 435, 436, 442, 443, 446, 447, 450, 451, 455,
            472, 473, 476,
            484, 486, 490, 491, 494, 500, 502, 506, 512, 518, 524, 545, 551, 559, 568, 570, 571, 572, 573, 580, 581,
            582, 583, 589,
            592, 597, 608, 617, 647, 649, 650, 663, 664, 675, 676, 686, 687, 695, 696, 697, 700, 701, 707, 716, 757,
            763, 764, 766,
            778, 785, 792, 814, 821, 830, 831, 833, 838, 844, 864, 867, 868, 892, 894, 895, 898, 932, 933, 958, 972,
            973, 981, 982,
            988, 1013, 1014, 1015, 1016, 1019, 1020, 1023, 1024, 1026, 1027, 1028, 1032, 1033, 1038, 1048, 1052, 1059,
            1068, 1083,
            1084, 1085, 1097, 1107, 1123, 1124, 1130, 1131, 1136, 1144, 1150, 1156
        ];
    }

    public static IList<int> GetContractedMedicalPractitionersConsultativeServicesRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 3), 9, 17, 20, 28, 32, 38, 42, 46,
        ];
    }

    public static IList<int> GetContractedDentalTherapyRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 7), 13, 22, 33, 34, 46, 49, 60, 66, 76, 78,
        ];
    }

    //923, 913, 1055, 1115, 1274, 1394, 1486, 1487, 3085, 3086, 3087, 3088, 3097, 3098, 3099, 3100, 3101, 3476, 3478, 3479, 3480 = modifiers.
    //NOTE: row 3638 is skipped because it appears this a subsection heading. 
    //NOTE: rows 4273, 4274, 4275, 4276 are excluded since these speak of rules (after hours tariff codes, and conditions surrounding the tariff code)
    public static IList<int> GetContractedSurgeonsRowsToSkip()
    {
        var staticList = new List<int>
        {
            128, 132, 136, 145, 146, 147, 149, 151, 154, 155, 156, 158, 161, 166, 172,
            175, 176, 187, 191, 196, 232, 234, 235, 241, 298, 311, 395, 419, 425, 439,
            446, 448, 449, 460, 461, 515, 527, 528, 537, 541, 553, 556, 561, 562, 578,
            581, 587, 591, 602, 624, 639, 646, 647, 673, 678, 679, 722, 739, 761, 767,
            776, 778, 788, 804, 811, 812, 822, 827, 838, 846, 847, 874, 875, 880, 890,
            912, 913, 914, 922, 923, 924, 952, 953, 982, 983, 1054, 1055, 1056, 1076, 1114,
            1115, 1116, 1117, 1124, 1134, 1135, 1155, 1156, 1172, 1173, 1174, 1175, 1176, 1177,
            1178, 1180, 1191, 1192, 1204, 1220, 1221, 1237, 1238, 1244, 1245, 1246, 1248, 1251,
            1254, 1273, 1274, 1275, 1276, 1284, 1287, 1305, 1318, 1333, 1336, 1352, 1357, 1371,
            1982, 1393, 1394, 1395, 1412, 1413, 1415, 1420, 1422, 1436, 1450, 1456, 1457, 1462,
            1484, 1485, 1486, 1487, 1488, 1508, 1524, 1527, 1549, 1591, 1613, 1618, 1652, 1655,
            1666, 1699, 1715, 1730, 1749, 1764, 1776, 1777, 1778, 1779, 1819, 1850, 1927, 1972,
            1973, 2004, 2043, 2063, 2064, 2096, 2159, 2188, 2227, 2237, 2253, 2264, 2289, 2290,
            2291, 2292, 2306, 2310, 2311, 2312, 2316, 2317, 2328, 2340, 2392, 2407, 2431, 2438,
            2452, 2471, 2496, 2515, 2528, 2555, 2557, 2594, 2627, 2628, 2629, 2639, 2643, 2648,
            2649, 2650, 2653, 2661, 2665, 2666, 2682, 2686, 2695, 2696, 2697, 2698, 2699, 2701,
            2705, 2706, 2713, 2717, 2720, 2723, 2728, 2729, 2730, 2731, 2742, 2769, 2774, 2785,
            2792, 2795, 2801, 2821, 2830, 2863, 2873, 2800, 2892, 2897, 2903, 2907, 2910, 2911,
            2920, 2921, 2922, 2923, 2924, 2925, 2936, 2947, 2975, 2976, 2979, 2984, 2985, 3005,
            3021, 3031, 3037, 3042, 3044, 3046, 3048, 3051, 3054, 3058, 3084, 3085, 3086, 3087,
            3088, 3089, 3131, 3143, 3162, 3176, 3185, 3197, 3200, 3208, 3213, 3215, 3221, 3236,
            3239, 3240, 3241, 3309, 3326, 3327, 3381, 3382, 3391, 3392, 3393, 3475, 3476, 3477,
            3478, 3479, 3480, 3559, 3560, 3561, 3568, 3575, 3582, 3589, 3592, 3599, 3600, 3607,
            3618, 3623, 3624, 3628, 3632, 3636, 3638, 3639, 3640, 3641, 3748, 3767, 3817, 3880,
            3881, 3882, 4020, 4103, 4118, 4149, 4159, 4160, 4172, 4183, 4271, 4273, 4274, 4275,
            4276, 4277, 4278, 4279, 4287, 4303, 4304, 4305, 4314,
        };

        return
        [
            ..staticList, ..Enumerable.Range(1, 108), ..Enumerable.Range(3090, 13), ..Enumerable.Range(3372, 6),
            ..Enumerable.Range(3533, 17), ..Enumerable.Range(4322, 9)
        ];
    }

    public static IList<int> GetContractedMedicalPractitionersRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 107), 127, 131, 133, 135, 144, 145, 146, 148, 150, 153, 154, 155, 157, 160, 163, 165,
            167, 171, 174, 175, 185, 186, 190, 195, ..Enumerable.Range(196, 37), 240, 297, 310, 394, 418, 424, 438, 439,
            445, 446, 447, ..Enumerable.Range(448, 11), 513, 525, 534, 538, 550, 553, 558, 559, 575, 578, 584, 588, 599,
            621, 628, 636, 643, 644, 670, 675, 676, 719, 736, 758, 764, 773, 775, 785, 801, 808, 809, 819, 824, 835,
            843,
            844, 853, 857, 871, 872, 877, 888, 909, 910, 912, 919, 921, 949, 950, 979, 980, 1051, 1052, 1053, 1073,
            1111, 1112,
            1113, 1114, 1121, 1131, 1132, 1152, ..Enumerable.Range(1169, 6), 1179, 1187, 1188, 1189, 1201, 1217, 1218,
            1234, 1235,
            1241, 1242, 1243, 1245, 1251, 1270, 1272, 1273, 1281, 1284, 1302, 1315, 1330, 1333, 1349, 1354, 1368, 1389,
            1390, 1391,
            1392, 1409, 1411, 1412, 1417, 1419, 1433, 1452, 1453, 1454, 1459, 1481, 1482, 1483, 1484, 1485, 1505, 1521,
            1524, 1546,
            1588, 1610, 1615, 1649, 1652, 1663, 1696, 1712, 1727, 1746, 1761, 1773, 1774, 1775, 1776, 1816, 1847, 1924,
            1969, 1970,
            2001, 2002, 2040, 2060, 2061, 2093, 2156, 2185, 2224, 2234, 2250, 2261, 2286, 2287, 2288, 2289, 2303, 2307,
            2308, 2309,
            2313, 2314, 2325, 2337, 2390, 2405, 2415, 2429, 2436, 2450, 2469, 2494, 2513, 2526, 2553, 2555, 2592, 2625,
            2626, 2627,
            2637, 2641, 2646, 2647, 2648, 2651, 2659, 2660, 2663, 2664, 2680, 2684, 2693, 2694, 2695, 2696, 2697, 2699,
            2703, 2704,
            2711, 2715, 2718, 2721, 2723, 2726, 2727, 2728, 2729, 2740, 2767, 2772, 2783, 2790, 2793, 2799, 2819, 2828,
            2861, 2871,
            2878, 2890, 2895, 2895, 2901, 2905, 2908, 2909, 2918, 2919, 2920, 2921, 2922, 2923, 2934, 2945, 2973, 2974,
            2977, 2977,
            2982, 2983, 3003, 3019, 3028, 3029, 3035, 3040, 3042, 3044, 3046, 3049, 3052, 3056,
            ..Enumerable.Range(3082, 18), 3219,
            3141, 3160, 3174, 3183, 3195, 3198, 3206, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3234,
            3237, 3238,
            3239, 3307, 3324, 3325, 3326, 3327, 3374, 3375, 3376, 3379, 3380, 3389, 3390, 3391, 3473, 3475, 3479, 3480,
            ..Enumerable.Range(3531, 13), 3552, 3553, 3557, 3558, 3559, 3566, 3573, 3580, 3587, 3590, 3597, 3598, 3605,
            3616, 3621,
            3622, 3626, 3630, 3634, 3636, 3638, 3639, 3746, 3765, 3815, 3878, 3879, 3880, 4018, 4101, 4116, 4147, 4157,
            4158, 4170,
            4181, 4269, 4275, 4276, 4277, 4285, 4301, 4302, 4303, 4312, 4320, 4321, 4328, 4329
        ];
    }

    public static IList<int> GetContractedOralHygienistRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 4),
        ];
    }

    public static IList<int> GetAccupuntureRowsToSkip()
    {
        return [17, 20, ..Enumerable.Range(1, 10)];
    }

    public static IList<int> GetContractedPhysiciansRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 108), 128, 132, 134, 136, 145, 146, 147, 149, 151, 154, 155, 156, 158, 161, 164,
            ..Enumerable.Range(166, 10),
            186, 187, 191, ..Enumerable.Range(196, 38), 241, 298, 311, 395, 419, 425, 439, 440,
            ..Enumerable.Range(446, 15), 515, 527, 528, 537,
            541, 553, 556, 561, 562, 578, 581, 587, 591, 602, 624, 631, 639, 646, 647, 673, 678, 679, 722, 739, 761,
            767, 776, 778, 788, 804, 811,
            812, 822, 827, 838, 846, 847, 856, 860, 874, 875, 880, 888, 890, 891, 912, 913, 914, 915, 922, 923, 924,
            952, 953, 982, 983, 1054, 1055,
            1056, 1076, 1114, 1115, 1116, 1117, 1124, 1134, 1135, 1155, 1156, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
            1180, 1182, 1186, 1190, 1192,
            1204, 1220, 1221, 1237, 1238, 1244, 1245, 1246, 1248, 1251, 1254, 1273, 1274, 1275, 1276, 1284, 1287, 1305,
            1318, 1333, 1336, 1352, 1357,
            1371, 1392, 1393, 1394, 1395, 1412, 1414, 1415, 1420, 1422, 1436, 1450, 1452, 1455, 1456, 1457, 1462, 1484,
            1485, 1486, 1487, 1488, 1508,
            1524, 1527, 1549, 1591, 1613, 1618, 1652, 1655, 1666, 1699, 1715, 1730, 1749, 1764, 1776, 1777, 1778, 1779,
            1819, 1850, 1927, 1972, 1973,
            2004, 2005, 2043, 2063, 2064, 2096, 2159, 2188, 2227, 2228, 2237, 2253, 2264, 2289, 2290, 2291, 2292, 2306,
            2310, 2311, 2312, 2316, 2317,
            2328, 2340, 2393, 2408, 2418, 2432, 2439, 2453, 2472, 2497, 2516, 2529, 2556, 2558, 2595, 2628, 2629, 2630,
            2640, 2644, 2649, 2650, 2651,
            2654, 2662, 2663, 2666, 2667, 2683, 2687, 2696, 2697, 2698, 2699, 2700, 2706, 2707, 2714, 2718, 2721, 2724,
            2729, 2730, 2731, 2732, 2743,
            2770, 2775, 2786, 2796, 2796, 2802, 2822, 2831, 2864, 2874, 2881, 2893, 2898, 2904, 2908, 2911, 2912, 2921,
            2922, 2923, 2924, 2925, 2926,
            2937, 2948, 2976, 2977, 2980, 2985, 2986, 3006, 3022, 3031, 3032, 3038, 3043, 3045, 3047, 3049, 3052, 3055,
            3059, ..Enumerable.Range(3085, 18),
            3132, 3144, 3163, 3177, 3186, 3198, 3201, 3209, ..Enumerable.Range(3214, 7), 3237, 3240, 3241, 3242, 3310,
            3327, 3328, 3329, 3330, ..Enumerable.Range(3373, 6),
            3382, 3383, 3392, 3393, 3394, 3476, 3477, 3478, 3482, 3483, ..Enumerable.Range(3534, 9),
            ..Enumerable.Range(3547, 4), 3555, 3556, 3560, 3561,
            3562, 3569, 3576, 3583, 3590, 3593, 3600, 3601, 3608, 3619, 3624, 3625, 3629, 3633, 3637, 3639, 3641, 3642,
            3749, 3768, 3818, 3881, 3882,
            3883, 4021, 4104, 4119, 4150, 4160, 4161, 4173, 4184, 4272, 4278, 4279, 4280, 4288, 4304, 4305, 4306, 4315,
            4323, 4324, 4331, 4332
        ];
    }

    public static IList<int> GetContractedPsychiatryRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 5), 15, 16, 29, 30, 40, 43, 44, 45, 46, 55, 60, 66, 68
        ];
    }

    public static IList<int> GetNursingRowsToSkip2023()
    {
        return
        [
            ..Enumerable.Range(1, 24), 31, 33, 35, 38, 41, 42, 46, 47, 48, 52, 53, 58, 62, 64, 65, 70, 74, 79, 83, 85, 86, 87, 89,
            99, 100, 103, 104, 105, 109, 119, 121, 122, 125, 126, 132, 137, 139, 150
        ];
    }

    public static IList<int> GetOccupationalTherapistsRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 20), 24, 29, 36, 43, 45, 51, 58, 60, 69, 75, 78, 79, 80, 81,
            104, 105, 124, 125, 131, 132
        ];
    }

    public static IList<int> GetOrthoptistsRowsToSkip()
    {
        return Enumerable.Range(1, 3).ToList();
    }

    public static IList<int> GetOrthoticsAndProstheticsRowsToSkip()
    {
        return [..Enumerable.Range(1, 2),];
    }

    public static IList<int> GetNonContractedPsychiatristRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 4), 14, 15, 28, 39, 42, 43, 44, 45, 54, 59, 65, 67 
        ];
    }

    public static IList<int> GetContractedDentalTechniciansRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 4), 24, 25, 26, 27, 28, 39, 69, 75, 105, 106, 107, 108,
            110, 132, 135, 136, 137, 138, 147, 177, 178, 179, 180, 195, 204, 213, 218, 229,
            232, 234, 235, 252, 267, 282, 283
        ];
    }

    public static IList<int> GetDieticiansRowsToSkip()
    {
        return [..Enumerable.Range(1, 12), 27, 28];
    }

    public static IList<int> GetHearingAidRowsToSkip()
    {
        return [..Enumerable.Range(1, 7)];
    }

    public static IList<int> GetHomeopathyRowsToSkip()
    {
        return [..Enumerable.Range(1, 14), 23, 24, 25, 26, 31, 37, 38, 40];
    }

    public static IList<int> GetHospicesRowsToSkip()
    {
        return Enumerable.Range(1, 5).ToList();
    }

    public static IList<int> GetMedicalScientistsRowsToSkip()
    {
        return [..Enumerable.Range(1, 5), 17, 24, 29, 35, 38];
    }

    public static IList<int> GetMentalHealthRowsToSkip()
    {
        return [..Enumerable.Range(1, 11)];
    }

    public static IList<int> GetNaturopathsRowsToSkip()
    {
        return [..Enumerable.Range(1, 6), 11, 14, 31];
    }

    public static IList<int> GetNonContractedDentalTherapyRowsToSkip2023()
    {
        return [..Enumerable.Range(1, 7), 13, 22, 33, 34, 46, 49, 61, 66, 67, 77, 79];
    }

    public static IList<int> GetNonContractedDentalTherapyRowsToSkip2024()
    {
        return [..Enumerable.Range(1, 7), 13, 22, 33, 34, 46, 60, 65, 66, 76, 78];
    }

    public static IList<int> GetNonContractedOralHygienistsRowsToSkip()
    {
        return [..Enumerable.Range(1, 4)];
    }

    public static IList<int> GetNonContractedDentistsAndDentalSpecialistsRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 70), 76, 85, 89, 94, 95, 104, 108, 111, 112, 146, 160, 161, 162,
            168, 169, 172, 173, 177, 187, 188, 189, 190, 196, 197, 207, 211, 212, 213, 214, 220, 221,
            226, 227, 228, 230, 232, 234, 236, 238, 240, 241, 242, 243, 250, 251, 257, 258, 269, 273,
            279, 280, 295, ..Enumerable.Range(309, 6), 318, 321, 322, 323, 327, 330, 335, 336, 344, 348,
            351, 358, 369, 370, 371, 372, 377, 395, 402, 407, 408, 409, 421, 435, 438, 439, 445, 446, 449,
            450, 453, 454, 458, 475, 476, 479, 489, 493, 494, 497, 503, 505, 509, 515, 521, 527, 548, 554,
            562, 571, 573, 574, 575, 576, 587, 588, 589, 590, 596, 599, 604, 615, 624, 654, 655, 656, 657,
            670, 671, 682, 683, 693, 694, 702, 703, 704, 707, 708, 714, 723, 764, 770, 771, 773, 785, 792,
            799, 821, 828, 837, 838, 840, 845, 851, 871, 874, 875, 899, 901, 902, 905, 939, 940, 965, 979,
            980, 988, 989, 995, 1020, 1021, 1022, 1023, 1026, 1027, 1030, 1031, 1033, 1034, 1035, 1039, 1040,
            1044, 1045, 1054, 1055, 1059, 1066, 1075, 1090, 1091, 1092, 1104, 1114, 1130, 1131, 1137, 1143,
            1151, 1157, 1163,
        ];
    }

    public static IList<int> GetNonContractedDentalPractitionersRowsToSkip2023()
    {
        return
        [
            ..Enumerable.Range(1, 70), 76, 85, 89, 94, 95, 104, 108, 111, 112, 146, 160, 161, 162,
            168, 169, 172, 173, 177, 187, 188, 189, 190, 196, 197, 207, 211, 212, 213, 214, 220, 221,
            226, 227, 228, 230, 232, 234, 236, 238, 240, 241, 242, 243, 250, 251, 257, 258, 269, 273,
            279, 280, 281, 296, ..Enumerable.Range(310, 6), 319, 322, 323, 324, 328, 330, 331, 336, 337, 345, 349,
            352, 359, 370, 371, 372, 373, 378, 396, 403, 408, 409, 410, 421, 435, 438, 439, 445, 446, 449,
            450, 453, 454, 458, 475, 476, 479, 489, 493, 494, 497, 503, 505, 509, 515, 521, 527, 548, 554,
            562, 571, 573, 574, 575, 576, 587, 588, 589, 590, 596, 599, 604, 615, 624, 654, 655, 656, 657,
            670, 671, 682, 683, 693, 694, 702, 703, 704, 707, 708, 714, 723, 764, 770, 771, 773, 785, 792,
            799, 821, 828, 837, 838, 840, 845, 851, 871, 874, 875, 899, 901, 902, 905, 939, 940, 965, 979,
            980, 988, 989, 995, 1020, 1021, 1022, 1023, 1026, 1027, 1030, 1031, 1033, 1034, 1035, 1039, 1040,
            1044, 1045, 1054, 1055, 1059, 1066, 1075, 1090, 1091, 1092, 1104, 1114, 1130, 1131, 1137, 1143,
            1151, 1157, 1163,
        ];
    }

    public static IList<int> GetNonContractedMedicalPractitionersConsultativeServicesRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 3), 9, 17, 20, 28, 32, 38, 42, 44, 46
        ];
    }

    public static IList<int> GetPhysiotherapyRowsToSkip()
    {
        return [..Enumerable.Range(1, 28), 34, 38, 42, 64, 69, 78, 91, 94, 101, 102, 103];
    }

    public static IList<int> GetPhytotherapyRowsToSkip()
    {
        return [..Enumerable.Range(1, 6), 13, 14, 15];
    }

    public static IList<int> GetNonContractedMedicalPractitionersRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 108), 128, 132, 136, 146, 147, 149, 151, 154, 155, 156, 158, 161, 166,
            ..Enumerable.Range(168, 8), 191,
            ..Enumerable.Range(196, 35), 234, 235, 241, 298, 311, 395, 419, 425, 439, ..Enumerable.Range(446, 15), 515,
            527, 536, 540, 552,
            555, 560, 561, 577, 580, 586, 590, 601, 623, 630, 638, 645, 646, 672, 677, 678, 721, 738, 760, 766, 775,
            777, 787, 803, 810, 811,
            821, 826, 837, 845, 846, 855, 859, 873, 874, 879, 887, 889, 890, 911, 912, 913, 914, 921, 922, 923, 951,
            952, 981, 982, 1053, 1054,
            1055, 1075, 1113, 1114, 1115, 1116, 1123, 1133, 1134, 1154, 1155, 1171, ..Enumerable.Range(1171, 6), 1179,
            1190, 1191, 1203, 1219,
            1220, 1236, 1237, 1243, 1244, 1245, 1247, 1253, 1272, 1273, 1274, 1275, 1283, 1286, 1304, 1317, 1332, 1335,
            1351, 1356, 1370, 1391,
            1392, 1393, 1394, 1411, 1413, 1414, 1419, 1421, 1435, 1449, 1451, 1454, 1455, 1456, 1461, 1483, 1484, 1485,
            1486, 1487, 1507, 1523,
            1526, 1548, 1590, 1612, 1617, 1651, 1654, 1665, 1698, 1714, 1729, 1748, 1763, 1775, 1776, 1777, 1778, 1818,
            1849, 1926, 1971, 1972,
            2003, 2004, 2042, 2062, 2063, 2095, 2158, 2187, 2226, 2227, 2236, 2252, 2263, 2288, 2289, 2290, 2291, 2305,
            2309, 2310, 2311, 2315,
            2316, 2237, 2339, 2392, 2407, 2417, 2431, 2452, 2471, 2496, 2515, 2528, 2555, 2557, 2594, 2627, 2628, 2629,
            2639, 2643, 2648, 2649,
            2650, 2653, 2661, 2662, 2665, 2666, 2682, 2686, 2695, 2696, 2697, 2698, 2699, 2701, 2705, 2706, 2713, 2717,
            2720, 2723, 2725, 2728,
            2729, 2730, 2731, 2742, 2769, 2774, 2785, 2792, 2795, 2801, 2821, 2830, 2863, 2873, 2880, 2892, 2897, 2903,
            2907, 2911, 2920, 2921,
            2922, 2923, 2924, 2925, 2936, 2947, 2975, 2976, 2979, 2984, 2985, 3005, 3021, 3030, 3031, 3037, 3042, 3044,
            3046, 3048, 3051, 3054,
            3058, 3084, 3085, 3089, ..Enumerable.Range(3090, 12), 3131, 3143, 3162, 3172, 3176, 3185, 3197, 3200, 3208,
            ..Enumerable.Range(3213, 9),
            3236, 3239, 3240, 3241, 3309, 3326, 3327, 3328, 3329, ..Enumerable.Range(3372, 6), 3381, 3382, 3391, 3392,
            3393, 3475, 3477, 3481,
            3482, ..Enumerable.Range(3533, 6), ..Enumerable.Range(3541, 3), ..Enumerable.Range(3546, 4), 3554, 3555,
            3559, 3560, 3561, 3568, 3575,
            3582, 3589, 3592, 3599, 3600, 3607, 3618, 3623, 3624, 3628, 3632, 3636, 3638, 3640, 3641, 3748, 3767, 3817,
            3880, 3881, 3882, 4020, 4103,
            4118, 4149, 4159, 4160, 4172, 4183, 4271, 4277, 4278, 4279, 4287, 4303, 4304, 4305, 4314, 4322, 4323, 4330,
            4331
        ];
    }

    public static IList<int> GetPodiatristsRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 15), 22, 24, 26, 31, 32, 39, 40, 47, 63, 67, 68,
            82, 89, ..Enumerable.Range(90, 4), 
        ];
    }

    public static IList<int> GetPsychologistsRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 13), 28, 29, 30,  
        ];
    }

    public static IList<int> GetPsychometryRegisteredCounsellorsRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 6), 22 
        ];
    }

    public static IList<int> GetRadiographyRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 15), 43, 51, 57, 64, 76, 86, 94, 100, 106, 109, 113, 118, 122, 125,
            132, 133, 134, 143, 145, 146, 163, 164, 165, 
        ];
    }

    public static IList<int> GetRadiologyRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 27), 30, 35, 38, 40, 42, 45, 47, 49, 51, 53, 55, 57, 59, 62, 64, 66, 68,
            70, 73, 75, 80, 82, 84, 86, 88, 90, 92, 94, 118, 126, 127,143, 144, 146, 147, 148, 159, 203, 204, 
            215, 216, 231, 232, 245, 246, 261, 262, 276, 277, 294, 295, 302, 303,314, 323, 324, 354, 362, 368,
            383, 384, 385, 420, 422, 427, 428, 433, 434, 451, 452, 454, 482, 483, 486, 488, 500, 512, 513, 514,
            523, 549, 550, 563, 568, 569, 577, 594, 596, 607, 621, 622, 623, 634, 643, 653, 654, 657, 688, 702, 
            703, 704, 705, 715, 716, 736, 737, 755, 756, 776, 777, 787, 788, 801, 802, 822, 823, 824, 846, 847,
            875, 891, 892, 916, 933, 934, 964, 978, 979, 980, 1007, 1023, 1024, 1055, 1071, 1072, 1110, 1124, 1125, 
            1126,  1135, 1136, 1146, 1151, 1156, 1159, 1164, 1180, 1192, 1196, 1201, 1202, 1233, ..Enumerable.Range(1260, 24)
        ];
    }

    public static IList<int> GetSocialWorksRowsToSkip()
    {
        return [..Enumerable.Range(1, 12), 27, 28];
    }

    public static IList<int> GetSonographersRowsToSkip()
    {
        return [..Enumerable.Range(1, 4), 20, 21];
    }

    public static IList<int> GetAudiologyRowsToSkip()
    {
        return
            [..Enumerable.Range(1, 14), 21, 26, 27, 32, 39, 40, 49, 56, 66, 6769, 75, 80, 85, 96, 110, 118, 126, 133];
    }

    public static IList<int> GetSubAcuteFacilitiesRowsToSkip()
    {
        return
        [
            ..Enumerable.Range(1, 5), 8, 9, 12, 13, 14, 18, 19, 20, ..Enumerable.Range(22, 8), 
        ];
    }
}